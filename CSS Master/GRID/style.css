body {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",
        Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue",
        sans-serif;
}

.grid {
    display: grid;
    gap: 5px;
    height: 50vh;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
    place-items: stretch center;
    /* align-items: stretch; */
    /* justify-items: center; */
}
 
.header {
    background-color: #2ecc71;
}
.content {
    background-color: #3498db;
}
.nav {
    background-color: #8e44ad;
}
.footer {
    background-color: #f39c12;
}

/* 
grid 생성은 flexbox 생성과 동일하게 부모 요소에서 진행한다.

grid-template-columns는 열의 개수와 열의 너비를 결정하는 property,
grid-template-rows는 행의 개수와 행의 높이를 결정하는 property이다.
column 사이에 공백을 주고 싶다면 column-gap,
row 사이에 공백을 주고 싶다면 row-gap,
column 사이와 row 사이에 동일한 공백을 주고 싶다면 gap을 사용하면 된다. 

-------------------------------------------------------------------------------

[grid-template-areas와 비슷한 기능을 하는 속성, 자식 grid에 명시한다.]
1)grid-column-start
2)grid-column-end
3)grid-row-start
4)grid-row-end
해당 속성은 정수인 숫자가 들어가며, 1부터 column(row)의 최대갯수 + 1까지 사용 가능하다.
범위를 초과하게 되면 css가 망가져서 생각한 대로 동작하지 않게 되니 꼭 명심하자.. 
참고로 상대단위(%, auto)등은 안 먹히는 듯 하다.

-------------------------------------------------------------------------------

(grid-column-start: 1;
grid-column-end: 4;)
=> grid-column: 1 / 4로 바꿔서 표현 할 수 있다
또, grid-column: 1 / -1하면 첫line부터 마지막 line까지 설정(맨 뒷줄부터 -1, -2... )
+
span => span은 얼만큼의 공간을 차지하는지 보여줌
gird-column: span 2; => 2열의 공간을 차지함.
grid-row: span 2; => 2행의 공간을 차지함.
but 시작line과 끝line을 표현하지 않음. 다른 요소와 관계를 봐야함
ex)
nav태그에서 grid-row: 1 / 3; 으로 되어있고,
content태그에서 grid-row: span 2;이면 content가 표현되지 않음
시작점이 없기 때문.

-------------------------------------------------------------------------------

fr(fraction)은 사용 가능한 공간을 의미한다. 즉 기본적으로 가능한 만큼의 공간을 차지한다.
fr은 전역으로 결정되는 것이 아닌 grid container에서 결정된다(여기서는 .grid)
따라서 fr을 쓰기 위해서는 grid container에 height을 명시해야 한다. 
이는 더이상 px등의 절대단위를 사용하지 않게끔 해주는 좋은 단위이다.

[grid-template]
"...cellNames(grid-area)" (row크기)
...
"...cellNames(grid-area)" (row크기)/ (각 column의 크기 [repeat()은 쓸 수 없다])

-------------------------------------------------------------------------------

justify-items: defalut=stretch (gird 부모(container)는 자식을 늘려서 부모를 채우게 함)
속성: start, center, end

align-items: default=stretch
속성: start, center, end
=> *둘 모두 grid container에서 적용

만약 요소에 크기를 지정했다면 stretch 되지 않음.
+
shortcut
place-items: stretch center (vertical horizon)

-------------------------------------------------------------------------------

*/
